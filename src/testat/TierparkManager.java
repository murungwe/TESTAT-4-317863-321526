/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testat;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author TT
 */
public class TierparkManager extends javax.swing.JFrame {

    /**
     * Creates new form TierparkManager
     */
    public TierparkManager() {
        initComponents();
        AnimalPanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AnimalPanel = new javax.swing.JPanel();
        AnimalLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AnimalTable = new javax.swing.JTable();
        CreateNewAnimalButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        exitMenuItem = new javax.swing.JMenuItem();
        BasicDataMenu = new javax.swing.JMenu();
        ManageAnimals = new javax.swing.JMenuItem();
        ManageFood = new javax.swing.JMenuItem();
        ManageStaff = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        HelpMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        AnimalLabel.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        AnimalLabel.setText("Animals at TierparkPforzheim");

        AnimalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Animal ID", "Name", "Age", "Healthy", "Fed", "Gender", "Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(AnimalTable);

        CreateNewAnimalButton.setText("NEW ANIMAL");
        CreateNewAnimalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateNewAnimalButtonActionPerformed(evt);
            }
        });

        jButton1.setText("DELETE ANIMAL");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AnimalPanelLayout = new javax.swing.GroupLayout(AnimalPanel);
        AnimalPanel.setLayout(AnimalPanelLayout);
        AnimalPanelLayout.setHorizontalGroup(
            AnimalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(AnimalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AnimalLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AnimalPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CreateNewAnimalButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );
        AnimalPanelLayout.setVerticalGroup(
            AnimalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AnimalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AnimalLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(AnimalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CreateNewAnimalButton)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        BasicDataMenu.setMnemonic('e');
        BasicDataMenu.setText("BASIC DATA");

        ManageAnimals.setMnemonic('t');
        ManageAnimals.setText("Manage Animals");
        ManageAnimals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManageAnimalsActionPerformed(evt);
            }
        });
        BasicDataMenu.add(ManageAnimals);

        ManageFood.setMnemonic('y');
        ManageFood.setText("Manage Food");
        ManageFood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManageFoodActionPerformed(evt);
            }
        });
        BasicDataMenu.add(ManageFood);

        ManageStaff.setMnemonic('p');
        ManageStaff.setText("Manage Staff");
        BasicDataMenu.add(ManageStaff);

        menuBar.add(BasicDataMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        HelpMenuItem.setMnemonic('c');
        HelpMenuItem.setText("Help");
        helpMenu.add(HelpMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AnimalPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AnimalPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        int answer; // What is the click of the user? Yes or NO?
        answer = JOptionPane.showConfirmDialog(this, "Closing the App?", "Please confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (answer == JOptionPane.NO_OPTION) {
            }
        if (answer ==JOptionPane.YES_OPTION) {System.exit(0);}
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void ManageFoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManageFoodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ManageFoodActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
   int answer; // What is the click of the user? Yes or NO?
        answer = JOptionPane.showConfirmDialog(this, "Closing the App?", "Please confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (answer == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
        
    }//GEN-LAST:event_formWindowClosing

    private void ManageAnimalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManageAnimalsActionPerformed
        AnimalPanel.setVisible(true);
    }//GEN-LAST:event_ManageAnimalsActionPerformed

    private void CreateNewAnimalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateNewAnimalButtonActionPerformed
       CreateAnimalDialog dialog = new CreateAnimalDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        
                    }
                });
                dialog.setVisible(true);
            
        
    }//GEN-LAST:event_CreateNewAnimalButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TierparkManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TierparkManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TierparkManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TierparkManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TierparkManager().setVisible(true);
            }
        });
    }
    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) AnimalTable.getModel(); 
        ArrayList<Animal> localAnimals = AnimalManager.addAnimal(); 
        
        //remove all old rows
        for(int i = model.getRowCount() - 1; i >= 0;  i--) {
            model.removeRow(i); 
        }
        
        //add all bikes from localBikes into the table
        Object rowData[] = new Object[3]; 
        for(int i = 0; i < localBikes.size();  i++) {
            rowData[0] = localBikes.get(i).getBikeID(); 
            rowData[1] = localBikes.get(i).getDescription(); 
            rowData[2] = localBikes.get(i).getPrice(); 
            model.addRow(rowData); 
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AnimalLabel;
    private javax.swing.JPanel AnimalPanel;
    private javax.swing.JTable AnimalTable;
    private javax.swing.JMenu BasicDataMenu;
    private javax.swing.JButton CreateNewAnimalButton;
    private javax.swing.JMenuItem HelpMenuItem;
    private javax.swing.JMenuItem ManageAnimals;
    private javax.swing.JMenuItem ManageFood;
    private javax.swing.JMenuItem ManageStaff;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables

}
